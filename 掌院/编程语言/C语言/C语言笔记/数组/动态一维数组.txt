1.动态构造一维数组

  int parr[len]//非法 等价于

  parr=（int *）malloc(4*len);


2.例子

#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
struct Student
{
int age;
float score;
char name[100];
};
int main()
{
  int len;
  struct Student *pArr;
  printf("请输入学生的个数：\n");
  printf("len= ");
  scanf("%d",&len);
  pArr=(struct Student *)malloc(len * sizeof(struct Student));
//输入

  for(int i=0; i<len; i++)
  {
  printf("请输入第%d个学生的信息：",i+1);

  printf("age=\n");
  scanf("%d",&pArr[i].age);

  printf("name=\n");
  scanf("%s",pArr[i].name);//name是数组名，本身就是数组首元素的地址，因此无须取地址。

  printf("score=\n");
  scanf("%f",&pArr[i].score);
  };

//输出
  
  for(int j=0;j<len;j++)
  {
   printf("第%d个学生的信息是：\n",j+1);
   printf("age=%d\n",pArr[j].age);
   printf("age=%s\n",pArr[j].name);
   printf("age=%f\n",pArr[j].score);
  }
  system("pause");
  return 0;
}