1.进制转换

  小数除以大数，商为0，余数是小数。

  除以要转换的进制，余数倒写

16进制转化为2进制 每个数字转化为4位


原码：

    符号位用0正1负  
    特点：
         1.加减运算复杂
         2.存在四种运算，增加了cpu的复杂度
         3.零的表示不唯一

反码： 
     


移码：
    表示数值平移n位，n称为移码量
    移码主要用于浮点数的阶码的存储

2.补码 解决整除的存储

    十进制转二进制

     正整数转二进制

             除2取余，直至商为零，余数倒序排序。

     负正数转二进制
 
             先求绝对值的补码，然后将所有位取反，末尾加1,位数不够补1

     求零的二进制

             全是0

    二进制求十进制

             首位是0，普通求
             首位是1，取反加1 所的数字是该负数的绝对值


00000000               0
00000001               1
........
01111111               127
10000000              -128
10000001              -127
10000010              -126
........
11111111              -1 
   

例子

  char ch=128; printf("%d",ch);//-128  

  原因：128整型 内存中为：24个0+1000000

              ch只能取8位，24个0截掉，保留10000000，其值为-128
