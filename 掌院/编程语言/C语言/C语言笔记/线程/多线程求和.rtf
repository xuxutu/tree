{\rtf1\ansi\ansicpg936\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset134 \'cb\'ce\'cc\'e5;}}
{\*\generator Riched20 10.0.10240}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang2052 #include<stdio.h>\par
#include<stdlib.h>\par
#include<process.h>\par
#include<windows.h>\par
#include<time.h>\par
#define N 1024\par
\par
struct Myinfo\par
\{\par
    int id;//\'cf\'df\'b3\'cc\'b1\'e0\'ba\'c5    \par
    int len;//\'b3\'a4\'b6\'c8\par
\tab int* pStart;//\'bf\'aa\'ca\'bc\'b5\'d8\'d6\'b7\par
\tab int sum;//\'b4\'e6\'b4\'a2\'ca\'fd\'be\'dd\'b5\'c4\'ba\'cd\par
\};\par
\par
typedef struct Queue\par
\{\par
    int * pBase;\par
    int front;\par
\tab int rear;\par
\}QUEUE;\par
QUEUE Q;\par
void init(QUEUE *pQ);\par
bool en_queue(QUEUE * pQ,int val);\par
void traverse_queque(QUEUE *pQ);\par
bool full_queue(QUEUE *pQ);\par
bool out_queue(QUEUE *pQ,int *pVal);\par
bool empty(QUEUE *pQ);\par
\par
void init(QUEUE *pQ)                              //\'b3\'f5\'ca\'bc\'bb\'af\'b6\'d3\'c1\'d0Q\par
\{\par
    pQ->pBase=(int *)malloc(sizeof(int)*9);       //\'bf\'aa\'b1\'d924\'d7\'d6\'bd\'da\'a3\'a86\'b8\'f6\'d5\'fb\'d0\'ce\'d4\'aa\'cb\'d8\'a3\'a9\'b4\'f3\'d0\'a1\'b5\'c4\'c4\'da\'b4\'e6\'a3\'ac\'ca\'d7\'b5\'d8\'d6\'b7\'b7\'c5\'d3\'daPBase  \par
    pQ->front=0;                                  //\'b6\'d3\'ca\'d7\'ce\'aa0\par
\tab pQ->rear=0;                                   //\'b6\'d3\'ce\'b2\'ce\'aa0\par
\}\par
\par
bool full_queue(QUEUE *pQ)                        //\'c5\'d0\'b6\'cf\'b6\'d3\'c1\'d0\'ca\'c7\'b7\'f1\'d2\'d1\'c2\'fa\par
\{\par
    if((pQ->rear+1) % 9==pQ->front)               //\'b5\'b1\'b6\'d3\'ca\'d7\'d3\'eb\'b6\'d3\'ce\'b2\'bd\'f4\'b0\'a4\'a3\'a8\'b6\'d3\'ce\'b2\'bc\'d3\'d2\'bb\'b5\'c8\'d3\'da\'b6\'d3\'ca\'d7\'a3\'a8\'d1\'ad\'bb\'b7\'b6\'d3\'c1\'d0\'d2\'aa\'b6\'d4\'b3\'a4\'b6\'c8\'c8\'a1\'d3\'e0\'a3\'a9\'a3\'a9\'a3\'ac\'b4\'cb\'ca\'b1\'b6\'d3\'c1\'d0\'ce\'aa\'c2\'fa\'b5\'c4\'d7\'b4\'cc\'ac\par
\tab     return true;\par
\tab else\par
\tab\tab return false;\par
\}\par
\par
bool en_queue(QUEUE * pQ,int val)                 //\'c8\'eb\'b6\'d3\par
\{\par
    if(full_queue(pQ))                            //\'ce\'b4\'c2\'fa\'b2\'c5\'c8\'eb\'b6\'d3\par
\tab\{\par
\tab     return false;\par
\tab\}\par
\tab else\par
\tab\{   pQ->pBase[pQ->rear]=val;                  //\'bd\'ab\'c8\'eb\'b6\'d3\'d4\'aa\'cb\'d8\'b7\'c5\'d3\'da\'b6\'d3\'ce\'b2\par
        pQ->rear=(pQ->rear+1) % 9;                //\'b6\'d3\'ce\'b2\'bc\'d31\par
\tab     return true;\par
\tab\}\par
\par
\}\par
\par
void traverse_queque(QUEUE *pQ)                   //\'b1\'e9\'c0\'fa\par
\{\par
    int i=pQ->front;                              //\'b6\'d3\'ca\'d7\'b5\'c4\'d6\'b5\'b8\'b3\'b8\'f8i\par
\par
\tab while(i != pQ->rear)                          //\'b5\'b1i\'b5\'c8\'d3\'da\'b6\'d3\'ce\'b2\'ca\'b1\'d6\'d5\'d6\'b9\'d1\'ad\'bb\'b7\'a3\'ac\'d2\'f2\'ce\'aa\'b6\'d3\'ce\'b2\'d6\'b8\'cf\'f2\'d3\'d0\'d0\'a7\'bd\'da\'b5\'e3\'b5\'c4\'cf\'c2\'b8\'f6\'bd\'da\'b5\'e3\par
\tab\{\par
\tab     printf("--\'a1\'b7%d",pQ->pBase[i]);                //\'ca\'e4\'b3\'f6\'ca\'fd\'d7\'e9\'d6\'b5\par
\tab\tab i=(i+1) % 9;                              //i+1\par
\tab\}\par
\par
\tab return;\par
\}\par
bool empty(QUEUE *pQ)                             //\'c5\'d0\'bf\'d5\par
\{\par
    if(pQ->front==pQ->rear)                       //\'b6\'d3\'ca\'d7\'b5\'c8\'d3\'da\'b6\'d3\'ce\'b2\'ca\'b1\'b6\'d3\'c1\'d0\'ce\'aa\'bf\'d5\par
\tab     return true;\par
\tab else\par
\tab\tab return false;\par
\par
\}\par
bool out_queue(QUEUE *pQ,int *pVal)              //\'b3\'f6\'b6\'d3\par
\{\par
    if( empty(pQ) )\par
\tab\{    \par
\tab\tab return false;\par
\tab\}\par
\tab else\par
\tab\{\par
\tab     *pVal=pQ->pBase[pQ->front];              //\'bd\'ab\'c9\'be\'b3\'fd\'b6\'d4\'cf\'f3\'b8\'b6\'b8\'f8\'d6\'f7\'ba\'af\'ca\'fd\'b6\'a8\'d2\'e5\'b5\'c4val\par
        pQ->front=(pQ->front+1) % 9;             //\'b6\'d3\'ca\'d7\'c9\'cf\'d2\'c6\par
\tab     return true;\par
\tab\}\par
\par
\}\par
\par
//\'b6\'e0\'cf\'df\'b3\'cc\par
//\'b2\'a2\'d0\'d0\'bc\'c6\'cb\'e3\par
//\'c7\'f31024\'b8\'f6\'cb\'e6\'bb\'fa\'d6\'b5\'b5\'c4\'d7\'dc\'ba\'cd\par
\par
//\'b6\'e0\'cf\'df\'b3\'cc\'d2\'aa\'c7\'f3\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'ce\'aavoid*p\par
void add02(void* p)\par
\{\par
    struct Myinfo* pInfo=(struct Myinfo* )p;\par
    \par
\tab for(int i=0;i<pInfo->len;i++)\par
\tab\{\par
\tab     pInfo->sum=pInfo->sum+pInfo->pStart[i];\par
\tab\}\par
    //\'c8\'eb\'b6\'d3\par
\tab en_queue(&Q,pInfo->id);\par
\tab printf("\'cf\'df\'b3\'cc%d\'bc\'c6\'cb\'e3\'b5\'c4\'bd\'e1\'b9\'fb\'ce\'aa:%d\\n",pInfo->id,pInfo->sum);\par
\par
\}\par
\par
\par
int main(void)\par
\{   \par
\tab init(&Q);//\'b4\'b4\'bd\'a8\'b6\'d3\'c1\'d0\par
\tab //\'b5\'a5\'cf\'df\'b3\'cc\'c7\'f3\'ba\'cd\par
\tab time_t ts;\par
    unsigned int num=time(&ts);\par
\tab srand(num);//\'c8\'a1\'cb\'e6\'bb\'fa\'ca\'fd\'d6\'d6\'d7\'d3\par
\tab //printf("%s\\n",asctime( localtime(&ts) ) );//\'b4\'f2\'d3\'a1\'ca\'b1\'bc\'e4\par
\tab //printf("%d\\n",sizeof(ts));//\'cb\'c4\'b8\'f6\'d7\'d6\'bd\'da\par
    //printf("%d",ts);//\'b7\'b5\'bb\'d8\'d6\'b5\'ca\'c7\'c3\'eb\'ca\'fd\par
\tab int data[N]=\{0\};\par
\par
\tab for(int i=0;i<N;i++)\par
\tab\{\par
\tab\tab data[i]=rand()%1000;\par
\tab\}\par
    //\'b5\'a5\'cf\'df\'b3\'cc\'bc\'c6\'cb\'e3\'d7\'dc\'ba\'cd\par
    int sum=0;\par
    for(i=0;i<N;i++)\par
\tab\{\par
\tab\tab sum=sum+data[i];\par
\tab\}\par
\tab printf("\'b5\'a5\'cf\'df\'b3\'cc\'a3\'basum=%d\\n",sum);\par
\par
    //\'b6\'e0\'cf\'df\'b3\'cc\'c7\'f3\'ba\'cd\par
\tab //add02();\par
    struct Myinfo info[8]=\{0\};//\'c8\'ab\'b2\'bf\'ca\'fd\'be\'dd\'b3\'f5\'ca\'bc\'bb\'af\'ce\'aa0\par
                                            \par
    int val;\par
\par
\tab\par
\tab\par
\tab for(i=0;i<8;i++)\par
\tab\{\par
\tab\tab info[i].id=i+1;\par
\tab\tab info[i].len=N/8;\par
\tab\tab info[i].pStart=data+i*N/8;\par
\tab\tab info[i].sum=0;\par
\tab\tab\par
        _beginthread(add02,0,&info[i]);\par
\tab\}   \par
\par
\tab system("pause");\par
\tab int lastsum=0;\par
\tab for(i=0;i<8;i++)\par
\tab\{\par
\tab\tab lastsum+=info[i].sum;\par
    \}\par
\tab printf("\'b6\'e0\'cf\'df\'b3\'cc\'a3\'basum=%d\\n",lastsum);\par
    printf("\'b1\'c8\'c8\'fc\'c5\'c5\'c3\'fb\'c8\'e7\'cf\'c2\'a3\'ba\\n");\par
\tab traverse_queque(&Q);\par
\par
\tab system("pause");\par
    return 0;\par
\}\par
\par
\par
2.\par
/*\par
Project->Settings->C/C++->Code Generation->Use run-time libray->Debug Multithread\'a3\'ac\par
\'bb\'f2 Multithread\'a3\'ac\'bb\'f2 Debug Multithread DLL\'a3\'ac \'bb\'f2 Multithread DLL\'b6\'bc\'bf\'c9\'d2\'d4\'a3\'ac\par
\'bc\'b4Use run-time library\'d0\'e8\'d2\'aa\'ca\'b9\'d3\'c3\'b6\'e0\'cf\'df\'b3\'cc\'b5\'c4\'a1\'a3\par
*/\par
\par
//\'b6\'e0\'cf\'df\'b3\'cc\'cd\'b3\'bc\'c6\'b9\'d8\'bc\'fc\'d7\'d6\'b5\'c4\'b3\'f6\'cf\'d6\'b4\'ce\'ca\'fd\par
\par
typedef struct ThreadSum\par
\{\par
    FILE* p;\par
\tab int sum;\par
\tab int n;\par
\}TS;\par
\par
//\'cf\'df\'b3\'cc\'bf\'aa\'ca\'bc\'ba\'af\'ca\'fd\par
void add(void* v)\par
\{\par
    //\'c9\'e8\'d6\'c3\'bb\'ba\'b3\'e5\'c7\'f8\par
    char buf[258]=\{0\};\par
    int count=0;\par
    char *p;\par
    //\'d6\'b8\'b6\'a8\'c7\'f8\'bc\'e4\'bc\'ec\'cb\'f7\par
\tab int j=((TS*)v)->sum;\par
\tab printf("sum=%d\\n",j);\par
\tab system("pause");\par
\tab int k=0;\par
\tab\par
\tab while(k<j)\par
\tab\{\par
\tab     fgets(buf,258,((TS*)v)->p);\par
\par
\tab\tab k=k+257;\par
        p=buf;\par
\tab\tab while(p=strstr(p,"\'c1\'d6\'b6\'af"))\par
\tab\tab\{\par
\tab\tab     count++;\par
\tab\tab\tab p=p+4;\par
            if(!p)\par
\tab\tab\tab\{\par
\tab\tab\tab     break;\par
\tab\tab\tab\}\par
\tab\tab\}\par
\tab\par
\tab\}\par
    ((TS*)v)->n=count;\par
\}\par
\par
void test02()\par
\{\par
\tab TS ts[5];\par
    //\'b4\'f2\'bf\'aa\'ce\'c4\'bc\'fe\par
\tab FILE* pf=fopen("C:\\\\Users\\\\Administrator\\\\Desktop\\\\\'ce\'e4\'b6\'af\'c7\'ac\'c0\'a4.txt","r+");\par
\par
\tab if(!pf)\par
\tab\{\par
\tab     printf("\'ce\'c4\'bc\'fe\'b4\'f2\'bf\'aa\'ca\'a7\'b0\'dc!\\n");\par
\tab\}\par
\tab else\par
\tab\{\par
\tab     printf("\'ce\'c4\'bc\'fe\'b4\'f2\'bf\'aa\'b3\'c9\'b9\'a6!\\n");\par
\tab\}\par
\tab\par
   //\'bb\'f1\'c8\'a1\'ce\'c4\'bc\'fe\'b4\'f3\'d0\'a1\par
   fseek(pf,0,SEEK_END);\par
   int num=ftell(pf);\par
   rewind(pf);\par
\par
   //\'c8\'ce\'ce\'f1\'c7\'d0\'b8\'ee\par
   for(int i=0;i<5;i++)\par
   \{\par
       ts[i].sum=num/5;\par
\tab    printf("Msum=%d",num/5);\par
\tab    fseek(pf,i*num/5,SEEK_SET);//\'c6\'ab\'d2\'c6\par
\tab    ts[i].p=pf;\par
       _beginthread(add,0,ts+i);//\'cf\'df\'b3\'cc\'bf\'aa\'ca\'bc\'ba\'af\'ca\'fd\par
   \}\par
\par
   int count=0;\par
   for(i=0;i<5;i++)\par
   \{\par
       count=count+ts[i].n;\par
   \}\par
   \par
   printf("\'ca\'e9\'d6\'d0\ldblquote\'c1\'d6\'b6\'af\rdblquote\'b3\'f6\'cf\'d6\'b5\'c4\'b4\'ce\'ca\'fd\'ce\'aa:%d\\n",count);\par
\}\par
\par
//\'b5\'a5\'cf\'df\'b3\'cc\'cd\'b3\'bc\'c6\'b9\'d8\'bc\'fc\'d7\'d6\'b5\'c4\'b3\'f6\'cf\'d6\'b4\'ce\'ca\'fd\par
test01()\par
\{\par
    FILE* pf=fopen("C:\\\\Users\\\\Administrator\\\\Desktop\\\\\'ce\'e4\'b6\'af\'c7\'ac\'c0\'a4.txt","r+");\par
\par
\tab if(!pf)\par
\tab\{\par
\tab     printf("\'ce\'c4\'bc\'fe\'b4\'f2\'bf\'aa\'ca\'a7\'b0\'dc!\\n");\par
\tab\}\par
\tab else\par
\tab\{\par
\tab     printf("\'ce\'c4\'bc\'fe\'b4\'f2\'bf\'aa\'b3\'c9\'b9\'a6!\\n");\par
\tab\}\par
\par
\tab //\'c9\'e8\'d6\'c3\'bb\'ba\'b3\'e5\'c7\'f8\par
    char buf[258]=\{0\};\par
    int count=0;\par
    char *p;\par
\par
\tab clock_t startTime=clock();\par
\par
\tab while(!feof(pf))\par
\tab\{\par
\tab     fgets(buf,258,pf);\par
        p=buf;\par
\tab\tab while(p=strstr(p,"\'c1\'d6\'b6\'af"))\par
\tab\tab\{\par
\tab\tab     count++;\par
\tab\tab\tab p=p+4;\par
            if(!p)\par
\tab\tab\tab\{\par
\tab\tab\tab     break;\par
\tab\tab\tab\}\par
\tab\tab\}\par
\tab\}\par
    printf("\'ca\'e9\'d6\'d0\ldblquote\'c1\'d6\'b6\'af\rdblquote\'b3\'f6\'cf\'d6\'b5\'c4\'b4\'ce\'ca\'fd\'ce\'aa:%d\\n",count);\par
\}\par
\par
\par
int main(void)\par
\{\par
\tab //clock_t startTime=clock();\par
\tab //test01();\par
\tab //clock_t endTime=clock();\par
    //printf("\'bc\'ec\'cb\'f7\'ba\'c4\'ca\'b1:%lf \'c3\'eb\\n",(double)(endTime-startTime)/CLOCKS_PER_SEC);\par
\par
\tab printf("------------------\\n");\par
\tab clock_t startTime=clock();\par
\tab test02();\par
\tab clock_t endTime=clock();\par
\tab printf("\'bc\'ec\'cb\'f7\'ba\'c4\'ca\'b1:%lf \'c3\'eb\\n",(double)(endTime-startTime)/CLOCKS_PER_SEC);\par
    system("pause");\par
    return 0;\par
\}\par
}
 