#include<stdio.h>
#include<stdlib.h>
#include <sys/types.h>
#include <unistd.h>
#include<sys/wait.h>

//getpid()//获取返回调用进程的PID
//getppid()//返回父进程的PID

//创建进程
//pid_t fork(void);
//返回：子进程返回0，父进程返回子进程的PID，出错返回-1；

//等待子进程
//pid_t waitpid(pid_t pid,int* statusp,int options)
//返回：true,返回子进程的PID；wnohang，返回0；other errors，返回-1；

//wait函数
//pid_t wait(int* statusp);
//true,返回子进程的PID，fasle，-1
//wait(&status)==waitpid(-1.&status,0).

//让进程休眠
//sleep函数将一个进程挂起一段指定的时间
int main(void)
{
    int x=1;

    if(fork()==0)
    {
        printf("a");
	fflush(stdout);
    }
    else
    {
        printf("b");
        fflush(stdout);
	waitpid(-1,NULL,0);
    }

    printf("c");
    fflush(stdout);
    exit(0);
}

/*
 *  子：a c
 *  父：b c
 *
 *
 *
 * */

