1.C语言与c++中，struct区别
答案：c中不能定义函数，可以定义函数指针，c++中可以定义函数；c中没有访问权限，c++中有访问缺陷
2.class与struct 的区别
答案：继承权限不同，不明确制定继承方式，class 是私有继承，struct是公有继承；成员的默认权限不同
3.判断一个程序有c编译还是c++编译
#ifdef _cplusplus
	cout<<"c++\n";
    #else
    cout<<"c!\n";
    #endif
	return 0;
4.c语言与c++的不同
  1.使用方向：c适用于体积小、效率高的场合，如嵌入式，系统内核；而c++适用于上层的、复杂的场合
  2.c是结构化编程语言，c++是面向对象的编程语言，c++侧重于对象而不是过程，侧重于类的设计而不是逻辑的设计
  3.c++是处的超集，在c的基础上扩充了很多东西
  4.相对于c来说，c++的纠错机制更加严格
5.引用的本质是指针，引用可读性强。
  引用必须初始化，指针不必
  指针可以改变指向，引用不可以改变指向；
  存在指针数组，不存在引用数组
  不存在指向空值得引用，存在指向空值的指针
6.sizeof(int),编译时候确定，可以作为常量
7.静态全局变量的作用域在本文件内，防止了冲突
8.对于一个频繁使用的、短小的函数，c用define定义，c++用内联函数inline定义
11.virtual;虚继承解决了内存优化的问题；父类希望子类重写自己的方法时用虚函数、
12.inline 写在函数定义体之前，使该函数称为内联函数。内联函数体的代码不能过长，内联函数省去调用函数的时间，是以代码膨胀为代价。内联函数不能包含循环语句，循环语句的开销比调用函数的开销更大。内联函数编译时进行参数检查
13.debuge与release区别
debuge,为调试版本，提供了调试信息，不作任何优化，方便程序员调。含有大量的调试代码，运行时需要相应的运行库。
release,称为发布版本，优化了代码的大小和运行效率，以便用户更好的使用。
14.assert 函数
  仅在degug模式下起作用的宏，用于检验不应该发生的情况
15.const与define 
const常量有数据类型，而define没有数据类型。编译器对于前者进行类型安全检查，对后者进行字符替换
17、引入new delete 的意义
new与delete是用算符，而不是库函数。new可以完成动态内存分配和初始化工作，delete可已完成释放和清理工作。
18.对于内存申请失败的情况的处理。设置自己的异常处理机制
19.c++存在强制类型转换，并不安全
20.对0取反，可测出操作系统的位数
21.虚函数表是在编译时建立的，虚函数指针是在运行时初始化的
37。const 用来阻止一个变量被改变，通常在定义的时候直接初始化。具体应用主要有以下几种情况：
    1.对于一个指针，可以使其本身不被改变，也可以使其指向的值不被改变。
    2.函数的形参中，用const修饰，表明它是个传入参数，内部不能改变其值
    3.一个累的成员函数后加const,这个函数叫常函数，不可以更改成员变量
    4.对于类的成员函数的返回值有时候必须指定返回类型为const，表明不为左值
38.封装、继承、多态
封装：将客观事物抽象成类，每个类对自身的数据和方法进行权限控制
继承：解决代码的重用
多态：父类指针或引用指向子类对象，一个接口完成不同的操作

39.全局变量先于main函数，全局对象的构造函数会在main调用之前执行
54.static是加了访问权限的全局变量，不能被继承。静态成员函数只能访问静态成员
55.模板的有点
函数模板的实例化是由编译程序在处理函数调用时自动完成的，而类模板在实例化的时候必须显示指定

56.求最大值
    (（10+5）+abs(10-5）)/2
64.打印行号跟文件信息
cout << __FILE__ << endl;
	cout << __LINE__ << endl;

65.三目运算符后面两个操作数必须是同一类型
66.数组的定义要求是编译期常量

89.要想输出一个字符串的地址可以加（void*）输出
